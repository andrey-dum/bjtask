{"version":3,"sources":["api/api.js","store/tasksReducer/actionTypes.js","store/tasksReducer/actions.js","store/authReducer/actionTypes.js","store/authReducer/actions.js","hooks/useActions.js","hooks/useInput.js","components/AddForm.jsx","components/Login.jsx","components/NavbarApp.jsx","utils/AuthRoute.jsx","components/TaskCard.jsx","components/Loader.jsx","components/Pagination.jsx","components/SortSelector.jsx","components/TaskList.jsx","components/PositionedSnackbar.jsx","App.js","reportWebVitals.js","store/authReducer/authReducer.js","store/tasksReducer/tasksReducer.js","store/rootReducer.js","store/index.js","index.js"],"names":["developer","instance","axios","baseURL","tasksAPI","params","queryStringParams","get","queryString","stringify","then","response","data","username","email","text","status","formData","FormData","append","post","headers","password","token","localStorage","getItem","id","FETCH_TASKS_START","FETCH_TASKS_SUCCESS","FETCH_TASKS_ERROR","SET_TOTAL_TASKS_COUNT","SET_SORT_FIELD","SET_SORT_DIRECTION","CHANGE_PAGE","SHOW_ALERT","HIDE_ALERT","fetchTasksStart","type","tasksActions","fetchTasksSuccess","tasks","payload","fetchTasksError","error","setTotalTasksCount","total","setSortField","sortFiled","setSortDirection","sortDirection","changePage","page","showAlert","alertObj","hideAlert","fetchTasks","dispatch","a","message","total_task_count","update","console","log","createTask","history","push","setTimeout","LOGIN_USER","LOGOUT","SET_ERROR","setError","loginUser","logout","removeItem","login","setItem","experationDate","Date","getTime","autoLogin","ActionCreators","authActions","useActions","useDispatch","bindActionCreators","useInput","initValue","useState","value","setValue","onChange","e","target","useStyles","makeStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","width","AddForm","classes","useHistory","useSelector","state","React","checked","setChecked","className","TextField","label","style","margin","placeholder","helperText","fullWidth","FormControlLabel","control","Checkbox","name","Button","variant","color","onClick","Login","auth","flexGrow","marginBottom","menuButton","title","NavbarApp","AppBar","position","Toolbar","Typography","component","Link","to","isAuth","AuthRoute","Component","rest","render","props","0","1","10","11","minWidth","alignItems","padding","cardContent","flex","fontSize","pos","TaskCard","task","edit","setEdit","check","setCheck","editToggle","notChanged","Card","CardContent","gutterBottom","edge","tabIndex","disableRipple","event","disabled","IconButton","aria-label","justifyContent","marginTop","Loader","CircularProgress","Pagination","portionNumber","setPortionNumber","pageLimit","pagesCount","Math","ceil","pages","i","portionCount","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","button","formControl","SortSelector","sort_direction","sort_field","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","MenuItem","TaskList","loading","useEffect","PositionedSnackbar","alert","Snackbar","anchorOrigin","vertical","horizontal","App","basename","process","Container","maxWidth","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","editMode","rootReducer","combineReducers","action","sessionId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9b10b25.chunk.js","sourcesContent":["\r\nimport * as axios from \"axios\";\r\nimport queryString from 'query-string'\r\nconst developer = \"?developer=AndreyD\"\r\n\r\nconst instance = axios.create({\r\n    // withCredentials: true,\r\n    baseURL: `https://uxcandy.com/~shapoval/test-task-backend/v2/`,\r\n})\r\n\r\n\r\nexport const tasksAPI = {\r\n    getTasks: (params = {}) => {\r\n         const queryStringParams = {\r\n             developer: \"AndreyD\",\r\n            ...params,\r\n\r\n        }\r\n\r\n       return instance.get(`/?${queryString.stringify(queryStringParams)}`)\r\n        .then(response => response.data)\r\n    },\r\n    createTask: (data) => {\r\n        const { username, email, text, status } = data\r\n        const formData = new FormData();\r\n        formData.append(\"username\", username);\r\n        formData.append(\"email\", email);\r\n        formData.append(\"text\", text);\r\n        formData.append(\"status\", status);\r\n\r\n      return instance.post(`/create${developer}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }})\r\n        .then(response => response.data)\r\n\r\n    },\r\n    login: (username, password) => {\r\n        const formData = new FormData();\r\n        formData.append(\"username\", username);\r\n        formData.append(\"password\", password);\r\n        return instance.post(`/login${developer}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }})\r\n        .then(response => response.data)\r\n\r\n    },\r\n    editTask: (data) => {\r\n        const formData = new FormData();\r\n        const token = localStorage.getItem('token')\r\n        formData.append(\"text\", data.text);\r\n        formData.append(\"status\", data.status);\r\n        formData.append(\"token\", token);\r\n        return instance.post(`/edit/${data.id}${developer}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }})\r\n        .then(response => response.data)\r\n\r\n    },\r\n}","export const FETCH_TASKS_START = \"tasks/FETCH_TASKS_START\"\r\nexport const FETCH_TASKS_SUCCESS = \"tasks/FETCH_TASKS_SUCCESS\"\r\nexport const FETCH_TASKS_ERROR = \"tasks/FETCH_TASKS_ERROR\"\r\nexport const SET_TOTAL_TASKS_COUNT = \"tasks/SET_TOTAL_TASKS_COUNT\"\r\nexport const SET_SORT_FIELD = \"tasks/SET_SORT_FIELD\"\r\nexport const SET_SORT_DIRECTION = \"tasks/SET_SORT_DIRECTION\"\r\nexport const CHANGE_PAGE = \"tasks/CHANGE_PAGE\"\r\nexport const SHOW_ALERT = \"tasks/SHOW_ALERT\"\r\nexport const HIDE_ALERT = \"tasks/HIDE_ALERT\"\r\n","import { tasksAPI } from '../../api/api'\r\nimport * as tasksActions  from './actionTypes'\r\n\r\n\r\nexport function fetchTasksStart() {\r\n\treturn {\r\n    type: tasksActions.FETCH_TASKS_START\r\n  }\r\n}\r\n\r\nexport function fetchTasksSuccess(tasks) {\r\n  return {\r\n    type: tasksActions.FETCH_TASKS_SUCCESS,\r\n\t\tpayload: tasks\r\n  }\r\n}\r\n\r\nexport function fetchTasksError(error) {\r\n  return {\r\n    type: tasksActions.FETCH_TASKS_ERROR,\r\n    payload: error\r\n  }\r\n}\r\n\r\nexport function setTotalTasksCount(total) {\r\n  return {\r\n    type: tasksActions.SET_TOTAL_TASKS_COUNT,\r\n    payload: total\r\n  }\r\n}\r\n\r\nexport function setSortField(sortFiled) {\r\n  return {\r\n    type: tasksActions.SET_SORT_FIELD,\r\n    payload: sortFiled\r\n  }\r\n}\r\n\r\nexport function setSortDirection(sortDirection) {\r\n  return {\r\n    type: tasksActions.SET_SORT_DIRECTION,\r\n    payload: sortDirection\r\n  }\r\n}\r\n\r\nexport function changePage(page) {\r\n  return {\r\n    type: tasksActions.CHANGE_PAGE,\r\n    payload: page\r\n  }\r\n}\r\n\r\nexport function showAlert(alertObj) {\r\n  return {\r\n    type: tasksActions.SHOW_ALERT,\r\n    payload: alertObj\r\n  }\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: tasksActions.HIDE_ALERT\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function fetchTasks(params = {}) {\r\n return async dispatch => {\r\n    dispatch(fetchTasksStart())\r\n      try {\r\n        // const params = {\r\n        //       page: page,\r\n        //       sort_field: sortField,\r\n        //       sort_direction: sort_direction\r\n        //   }\r\n        const response = await tasksAPI.getTasks(params)\r\n\r\n        if(response.status === 'error') {\r\n            dispatch(fetchTasksError(response.message))\r\n        } else {\r\n            dispatch(fetchTasksSuccess(response.message.tasks))\r\n            dispatch(setTotalTasksCount(+response.message.total_task_count))\r\n        }\r\n      } catch (error) {\r\n          dispatch(fetchTasksError(error))\r\n      }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function update(data) {\r\n return async dispatch => {\r\n    try {\r\n      const response = await tasksAPI.editTask(data)\r\n\r\n      if(response.status === 'error') {\r\n        console.log(response.message);\r\n      } else {\r\n        dispatch(fetchTasks())\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function createTask(data, history) {\r\n  return async dispatch => {\r\n    try {\r\n      const response = await tasksAPI.createTask(data)\r\n\r\n      if(response.status === 'error') {\r\n        dispatch(fetchTasksError(response.message))\r\n      } else {\r\n        dispatch(showAlert({type: 'success', text: \"Задача успешно добавлена!!!\"}))\r\n        history.push('/')\r\n        setTimeout(() => {\r\n            dispatch(hideAlert())\r\n        }, 2000)\r\n      }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\n","\r\n\r\nexport const LOGIN_USER = \"user/LOGIN_USER\"\r\nexport const LOGOUT = \"user/LOGOUT\"\r\nexport const SET_ERROR = \"user/SET_ERROR\"","import { tasksAPI } from '../../api/api'\r\nimport { LOGIN_USER, LOGOUT, SET_ERROR } from './actionTypes'\r\n\r\n// export function authSuccess(token) {\r\n//     return {\r\n//         type: AUTH_SUCCESS,\r\n//         token\r\n//     }\r\n// }\r\n\r\n\r\nexport function setError (error) {\r\n\treturn {\r\n\t\ttype: SET_ERROR,\r\n\t\tpayload: error\r\n\t}\r\n}\r\nexport function loginUser (token) {\r\n\treturn {\r\n\t\ttype: LOGIN_USER,\r\n\t\tpayload: token\r\n\t}\r\n}\r\n\r\nexport function logout () {\r\n\tlocalStorage.removeItem('token')\r\n\tlocalStorage.removeItem('experationDate')\r\n\treturn {\r\n\t\ttype: LOGOUT\r\n\t}\r\n}\r\n\r\n\r\nexport function login (username, password) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst response = await tasksAPI.login(username, password)\r\n\r\n\t\t\tif(response.status === 'error') {\r\n\t\t\t\tdispatch(setError(response.message))\r\n\t\t\t}\telse {\r\n\t\t\t\tlocalStorage.setItem(\"token\", response.message.token);\r\n\r\n\t\t\t\tconst experationDate = new Date(new Date().getTime() + 24 * 3600 * 1000)\r\n\t\t\t\tlocalStorage.setItem('experationDate', experationDate)\r\n\r\n\t\t\t\tdispatch(loginUser(response.message))\r\n\t\t\t}\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport function autoLogin() {\r\n\treturn dispatch => {\r\n\t\tconst token = localStorage.getItem('token')\r\n\t\tif (!token) {\r\n\t\t\t\tdispatch(logout())\r\n\t\t} else {\r\n\t\t\t\tconst expirationDate = new Date(localStorage.getItem('experationDate'))\r\n\t\t\t\tif (expirationDate <= new Date()) {\r\n\t\t\t\t\t\tdispatch(logout())\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(loginUser(token))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\n","\r\nimport {useDispatch} from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n\r\nimport * as tasksActions from '../store/tasksReducer/actions'\r\nimport * as authActions from '../store/authReducer/actions'\r\n\r\nconst ActionCreators = {\r\n    ...tasksActions,\r\n    ...authActions\r\n}\r\n\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(ActionCreators, dispatch)\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nconst useInput = (initValue) => {\r\n  const [value, setValue] = useState(initValue)\r\n\r\n  const onChange = (e) => {\r\n    setValue (e.target.value)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    onChange\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default useInput","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../hooks/useActions'\r\nimport useInput from '../hooks/useInput'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '25ch',\r\n\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction AddForm() {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n\r\n  const {error} = useSelector(state => state.tasks)\r\n  const [checked, setChecked] = React.useState(false)\r\n  const { createTask } = useActions()\r\n\r\n  const username = useInput('')\r\n  const email = useInput('')\r\n  const text = useInput('')\r\n\r\n\r\n  const create = () => {\r\n    const data = {\r\n      username: username.value,\r\n      email: email.value,\r\n      text: text.value,\r\n      status: checked ? 10 : 0\r\n    }\r\n    createTask(data, history)\r\n  }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <TextField\r\n          {...username}\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Username\"\r\n          helperText=\"Full Username!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <div className=\"error\">{error && error.username}</div>\r\n\r\n        <TextField\r\n          {...email}\r\n          id=\"email\"\r\n          label=\"Email\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Email\"\r\n          helperText=\"Email!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <div  className=\"error\">{error && error.email}</div>\r\n        <TextField\r\n          {...text}\r\n          id=\"text\"\r\n          label=\"Text\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Text\"\r\n          helperText=\"Full Text!\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n\r\n        <FormControlLabel\r\n          style={{ margin: 8 }}\r\n          control={<Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} name=\"status\" />}\r\n          label=\"Статус\"\r\n        />\r\n        <Button\r\n          style={{ margin: 8 }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={create}\r\n          // disabled={!username.value || !email.value || !text.value}\r\n        >Создать\r\n        </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddForm\r\n","import { useSelector } from 'react-redux'\r\nimport useInput from '../hooks/useInput'\r\nimport { useActions } from '../hooks/useActions'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction Login() {\r\n  const { login } = useActions()\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  const username = useInput('')\r\n  const password = useInput('')\r\n\r\n  const onLogin = () => {\r\n    login(username.value, password.value)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <TextField\r\n        {...username}\r\n        id=\"username\"\r\n        label=\"Username\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Username\"\r\n        helperText=\"Full Username!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <div className=\"error\">{auth.error && auth.error.username }</div>\r\n     <TextField\r\n        {...password}\r\n        id=\"password\"\r\n        type=\"password\"\r\n        label=\"password\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"password\"\r\n        helperText=\"Enter password!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <div className=\"error\">{auth.error && auth.error.password }</div>\r\n      <Button\r\n          style={{ margin: 8 }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={onLogin}\r\n          // disabled={!username.value || !email.value || !text.value}\r\n          >\r\n          Войти\r\n        </Button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { useActions } from '../hooks/useActions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 25\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function NavbarApp() {\r\n  const classes = useStyles();\r\n  const { logout } = useActions()\r\n\r\n  const state = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            App\r\n          </Typography>\r\n            {/* <Link to=\"/\">Home</Link>\r\n            <Link to=\"/login\">login</Link>\r\n            <Link to=\"/add\">add</Link> */}\r\n          <Button component={Link} to=\"/\" color=\"inherit\">Home</Button>\r\n          {state.isAuth\r\n            ? <Button onClick={logout} color=\"inherit\">Logout</Button>\r\n            : <Button component={Link} to=\"/login\" color=\"inherit\">Login</Button>\r\n          }\r\n          <Button component={Link} to=\"/add\" color=\"inherit\">Add</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction AuthRoute({ component: Component, ...rest }) {\r\n  const { token } = useSelector(state => state.auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        token ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AuthRoute;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport { useActions } from '../hooks/useActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst status = {\r\n  0: 'задача не выполнена',\r\n  1: 'задача не выполнена, отредактирована админом',\r\n  10: 'задача выполнена',\r\n  11: 'задача отредактирована админом и выполнена',\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    marginBottom: 25\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function TaskCard({task}) {\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [edit, setEdit] = useState(false);\r\n  const [value, setValue] = useState(task.text);\r\n  const [check, setCheck] = useState(task.status === 10 || task.status === 11);\r\n  const { update, logout } = useActions()\r\n  const {token} = useSelector(state => state.auth)\r\n\r\n  const editToggle = () => {\r\n    setEdit(!edit)\r\n  }\r\n\r\n  const notChanged = (check === (task.status === 10 || task.status === 11)) && value === task.text\r\n\r\n  const onUpdateTask = () => {\r\n    const token = localStorage.getItem('token')\r\n\r\n    const data = {\r\n      id: task.id,\r\n      text: value,\r\n      status: task.status\r\n    }\r\n\r\n    if(!check) {\r\n      data.status = 0\r\n    }\r\n    if(!check && value !== task.text) {\r\n      data.status = 1\r\n    }\r\n\r\n    if (check) {\r\n      data.status = 10\r\n    }\r\n    if (check && value !== task.text) {\r\n      data.status = 11\r\n    }\r\n\r\n    if(!token) {\r\n      logout()\r\n      history.push('/login')\r\n    } else {\r\n      update(data)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {!edit\r\n        ?\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            {task.email}\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {task.username}\r\n          </Typography>\r\n          <Typography className={classes.pos}>\r\n              {task.text}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n              Статус: { status[task.status] }\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        : <CardContent className={classes.cardContent}>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              {task.email}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {task.username}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n            <input\r\n                name=\"username\"\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            </Typography>\r\n\r\n            <Checkbox\r\n              edge=\"start\"\r\n              tabIndex={-1}\r\n              disableRipple\r\n              checked={check}\r\n              onChange={(event) => setCheck(event.target.checked)}\r\n            />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={onUpdateTask}\r\n                disabled={notChanged}\r\n                // disabled={(check === (task.status === 10 || task.status === 11)) && value === task.text}\r\n              >\r\n                Изменить\r\n              </Button>\r\n            </CardContent>\r\n      }\r\n\r\n        {task.status === 10 || task.status === 11 ? <CheckCircleOutlineIcon style={{ fontSize: 50, color: '#7ad87a' }} /> : <CheckCircleOutlineIcon style={{ fontSize: 50, color: '#ccc' }} /> }\r\n\r\n       { token &&  (\r\n         !edit\r\n          ? <IconButton\r\n              onClick={editToggle}\r\n              aria-label=\"editToggle\"\r\n              className={classes.margin}\r\n            >\r\n              <EditIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        :\r\n        <IconButton\r\n          onClick={editToggle}\r\n          aria-label=\"CloseIcon\"\r\n          className={classes.margin}\r\n        >\r\n          <CloseIcon fontSize=\"large\" />\r\n        </IconButton>\r\n       )}\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 50\r\n  },\r\n}));\r\n\r\nexport default function Loader() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../hooks/useActions';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    marginBottom: 25\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n  },\r\n\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\n\r\nfunction Pagination() {\r\n  const classes = useStyles();\r\n  let [portionNumber, setPortionNumber] = React.useState(1);\r\n\r\n  const { changePage } = useActions()\r\n  const {page, total_task_count, pageLimit} = useSelector(state => state.tasks)\r\n\r\n  const pagesCount = Math.ceil(total_task_count / pageLimit);\r\n\r\n  let pages = [];\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const portionSize = 5\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n  if(pagesCount <= 1) {\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      {portionNumber > 1 &&\r\n         <IconButton\r\n              onClick={() => {setPortionNumber(portionNumber - 1)}}\r\n              aria-label=\"CloseIcon\"\r\n              className={classes.margin}>\r\n            <ArrowBackIcon fontSize=\"medium\" />\r\n        </IconButton>\r\n        }\r\n\r\n        {pages\r\n          .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n          .map((p) => (\r\n            <span\r\n              key={p}\r\n              onClick={() => changePage(p)}\r\n              className={page === p ? \"active\" : \"\"}\r\n            >\r\n              {p}\r\n            </span>\r\n        ))}\r\n        {portionCount > portionNumber &&\r\n         <IconButton\r\n              onClick={() => {setPortionNumber(portionNumber + 1)}}\r\n              aria-label=\"CloseIcon\"\r\n              className={classes.margin}\r\n              >\r\n            <ArrowForwardIcon fontSize=\"medium\" />\r\n        </IconButton>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport ArrowUp from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDown from '@material-ui/icons/ArrowDownward';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function SortSelector() {\r\n  const classes = useStyles();\r\n\r\n  const { setSortField, setSortDirection } = useActions()\r\n\r\n  const {sort_direction, sort_field} = useSelector(state => state.tasks)\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setSortField(event.target.value)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: 30}}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">Сортировать</InputLabel>\r\n            <Select\r\n              labelId=\"demo-controlled-open-select-label\"\r\n              id=\"demo-controlled-open-select\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={sort_field}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value={'id'}>Id</MenuItem>\r\n              <MenuItem value={'username'}>Username</MenuItem>\r\n              <MenuItem value={'email'}>Email</MenuItem>\r\n              <MenuItem value={'status'}>Status</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n            <div\r\n                style={{display: 'flex', alignItems: 'center'}}\r\n                onClick={() => setSortDirection(sort_direction === \"asc\" ? 'desc' : 'asc')}>\r\n                Порядок {sort_direction === 'desc' ? <ArrowUp /> : <ArrowDown />}\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport {\r\n  useSelector\r\n} from 'react-redux'\r\nimport TaskCard from '../components/TaskCard';\r\nimport { useActions } from '../hooks/useActions';\r\nimport Loader from './Loader';\r\nimport Pagination from './Pagination';\r\nimport SortSelector from './SortSelector';\r\n\r\n\r\nfunction TaskList() {\r\n\r\n  const { fetchTasks } = useActions()\r\n  const {page, loading, tasks, sort_direction, sort_field } = useSelector(state => state.tasks)\r\n\r\n  useEffect(() => {\r\n    fetchTasks({page, sort_field, sort_direction})\r\n  }, [sort_field, sort_direction, page])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SortSelector />\r\n      <Pagination />\r\n      { loading\r\n        ? <Loader />\r\n        : tasks.map(task => (\r\n          <TaskCard\r\n            key={task.id}\r\n            task={task}\r\n          />\r\n      )) }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function PositionedSnackbar() {\r\n  const {alert} = useSelector(state => state.tasks)\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        open={!!alert}\r\n        message={alert?.text}\r\n      />\r\n    </div>\r\n  );\r\n}","import { useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport AddForm from './components/AddForm';\nimport Login from './components/Login';\nimport NavbarApp from './components/NavbarApp';\nimport AuthRoute from './utils/AuthRoute';\nimport TaskList from './components/TaskList';\nimport { useActions } from './hooks/useActions';\nimport Container from '@material-ui/core/Container';\nimport PositionedSnackbar from './components/PositionedSnackbar';\n\n\n\n\nfunction App() {\n  const {autoLogin} = useActions()\n\n  useEffect(() => {\n      autoLogin()\n  }, [])\n\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <NavbarApp />\n        <Container maxWidth=\"sm\">\n          <Switch>\n            <Route path=\"/add\"  component={AddForm} />\n            <AuthRoute path=\"/login\" component={Login} />\n            <Route path=\"/\"  component={TaskList} />\n          </Switch>\n          <PositionedSnackbar />\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { LOGIN_USER, LOGOUT, SET_ERROR } from './actionTypes'\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  token: null,\r\n  isAuth: false\r\n}\r\n\r\nexport default function authReducer (state = initialState, action) {\r\n  switch(action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAuth: true\r\n      }\r\n      case LOGOUT:\r\n        return {\r\n            ...state,\r\n            token: null,\r\n            sessionId: null,\r\n            isAuth: false\r\n        }\r\n      case SET_ERROR:\r\n        return {\r\n            ...state,\r\n            error: action.payload\r\n        }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","\r\nimport * as tasksActions  from './actionTypes'\r\n\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  loading: false,\r\n  pageLimit: 3,\r\n  total_task_count: 0,\r\n  page: 1,\r\n  error: null,\r\n  editMode: false,\r\n  sort_direction: 'asc',\r\n  sort_field: 'id',\r\n  alert: null,\r\n\r\n}\r\n\r\nexport default function tasksReducer (state = initialState, action) {\r\n  switch(action.type) {\r\n    case tasksActions.FETCH_TASKS_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case tasksActions.FETCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n        loading: false\r\n      }\r\n    case tasksActions.FETCH_TASKS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      }\r\n    case tasksActions.SET_TOTAL_TASKS_COUNT:\r\n      return {\r\n        ...state,\r\n        total_task_count: action.payload\r\n      }\r\n    case tasksActions.SET_SORT_FIELD:\r\n      return {\r\n        ...state,\r\n\t\t\t\tsort_field: action.payload\r\n      }\r\n    case tasksActions.SET_SORT_DIRECTION:\r\n      return {\r\n        ...state,\r\n\t\t\t\tsort_direction: action.payload\r\n      }\r\n    case tasksActions.CHANGE_PAGE:\r\n      return {\r\n        ...state,\r\n\t\t\t\tpage: action.payload\r\n      }\r\n    case tasksActions.SHOW_ALERT:\r\n      return {\r\n        ...state,\r\n\t\t\t\talert: action.payload\r\n      }\r\n    case tasksActions.HIDE_ALERT:\r\n      return {\r\n        ...state,\r\n\t\t\t\talert: null\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer/authReducer';\r\nimport tasksReducer from './tasksReducer/tasksReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    tasks: tasksReducer,\r\n    auth: authReducer,\r\n})\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './rootReducer'\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(\r\n      thunk\r\n)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}